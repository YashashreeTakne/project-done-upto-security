<?xml version="1.0" encoding="UTF-8"?>
<beans:beans  xmlns:beans="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:webflow-config="http://www.springframework.org/schema/webflow-config"
      
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security 
       http://www.springframework.org/schema/security/spring-security.xsd 
       http://www.springframework.org/schema/webflow-config 
       http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd">
       
    <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <beans:property name="driverClassName" value="org.h2.Driver" />
        <beans:property name="url" value="jdbc:h2:tcp://localhost/~/test" />
        <beans:property name="username" value="sa"/>
        <beans:property name="password" value="" />
    </beans:bean>
    
<!-- Hibernate 4 SessionFactory Bean definition -->
    <beans:bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" >
        <beans:property name="dataSource" ref="dataSource"></beans:property>
        <beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.model.Product</beans:value>
				<beans:value>com.model.Customer</beans:value>
				<beans:value>com.model.Users</beans:value>
				<beans:value>com.model.Authorities</beans:value>
				<beans:value>com.model.Supplier</beans:value>
				<beans:value>com.model.Category</beans:value>
				
			</beans:list>
		</beans:property>
        <beans:property name="hibernateProperties" >
            <beans:props>
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</beans:prop>
                <beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
                <beans:prop key="hibernate.show_sql">true</beans:prop>
                <beans:prop key="hibernate.format_sql">true</beans:prop>
            </beans:props>
        </beans:property>
        
                <beans:property name="packagesToScan">
            <beans:list>
                <beans:value>com</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>
   
    <beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <beans:property name="sessionFactory" ref="sessionFactory" />
    </beans:bean>
    
        <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <beans:property name="maxUploadSize" value="10240000" />
    </beans:bean>
        
<!-- <security:http auto-config="true" use-expressions="true" > -->
<!-- <security:intercept-url pattern="/Hello" access="permitAll" /> any no. of delemitters  -->
<!-- <security:intercept-url pattern="/login" access="permitAll" /> -->
<!-- <security:intercept-url pattern="/get*/**" access="permitAll"/> -->
<!-- <security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" /> -->
<!-- <security:form-login login-page="/login" default-target-url="/Hello" authentication-failure-url="/login?error" /> -->
<!-- <security:logout logout-success-url="/login?logout"/> -->
<!-- </security:http> -->

<!--  <security:http auto-config="true" use-expressions="true"> -->
<!--         <security:intercept-url pattern="/admin/**" access="ROLE_ADMIN" /> -->
<!--         <security:intercept-url pattern="/customer/**" access="ROLE_USER" /> -->
<!--         <security:intercept-url pattern="/Hello" access="permitAll" /> -->
<!--         <security:intercept-url pattern="/login" access="permitAll" /> any no. of delemitters  -->
<!--         <security:form-login -->
<!--             login-page="/login"  -->
<!--             default-target-url="/product/productList" -->
<!--             authentication-failure-url="/login?error" -->
<!--             username-parameter="j_username" -->
            
<!--             password-parameter="j_password" /> -->
<!--         <security:logout -->
<!--             logout-success-url="/login?logout" /> -->
<!--     </security:http> -->


<security:http auto-config="true" use-expressions="true">
<security:intercept-url pattern="/index/**" access="permitAll"/>
<security:intercept-url pattern="/Hello" access="permitAll"/>
<security:intercept-url pattern="/get*/**" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
<security:form-login login-page="/login" default-target-url="/Hello" authentication-failure-url="/login?error"/>
<security:logout logout-success-url="/login?logout"/>
</security:http>


<security:authentication-manager>
<security:authentication-provider>
<security:jdbc-user-service
data-source-ref="dataSource"
authorities-by-username-query="SELECT username, authority FROM authorities WHERE username = ?"
users-by-username-query="SELECT username, password, enabled FROM users WHERE username = ?"/>
</security:authentication-provider>
</security:authentication-manager>

<!-- <security:authentication-manager> -->
<!-- <security:authentication-provider> -->
<!-- <security:user-service> -->
<!-- <security:user name="john" password="qwerst" authorities="ROLE_ADMIN" /> -->
<!-- <security:user name="james" password="qwerst" authorities="ROLE_USER" /> -->
<!-- </security:user-service> -->
<!-- </security:authentication-provider> -->
<!-- </security:authentication-manager> -->

    <security:authentication-manager>
        <security:authentication-provider>
            <security:jdbc-user-service
                    data-source-ref="dataSource"
                    authorities-by-username-query="SELECT username, authority FROM authorities WHERE username = ?"
                    users-by-username-query="SELECT username, password, enabled FROM users WHERE username = ?" />
        </security:authentication-provider>
    </security:authentication-manager>
</beans:beans>